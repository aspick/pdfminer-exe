environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

    PYTHON: "C:\\Python27"
    PYTHON_VERSION: "2.7.x" # currently 2.7.9
    PYTHON_ARCH: "32"

  # matrix:
  #
  #   # Python 2.7.10 is the latest version and is not pre-installed.
  #
  #   - PYTHON: "C:\\Python27.10"
  #     PYTHON_VERSION: "2.7.10"
  #     PYTHON_ARCH: "32"
  #
  #   - PYTHON: "C:\\Python27.10-x64"
  #     PYTHON_VERSION: "2.7.10"
  #     PYTHON_ARCH: "64"
  #
  #   # Pre-installed Python versions, which Appveyor may upgrade to
  #   # a later point release.
  #
  #   - PYTHON: "C:\\Python27"
  #     PYTHON_VERSION: "2.7.x" # currently 2.7.9
  #     PYTHON_ARCH: "32"
  #
  #   - PYTHON: "C:\\Python27-x64"
  #     PYTHON_VERSION: "2.7.x" # currently 2.7.9
  #     PYTHON_ARCH: "64"
  #
  #   - PYTHON: "C:\\Python33"
  #     PYTHON_VERSION: "3.3.x" # currently 3.3.5
  #     PYTHON_ARCH: "32"
  #
  #   - PYTHON: "C:\\Python33-x64"
  #     PYTHON_VERSION: "3.3.x" # currently 3.3.5
  #     PYTHON_ARCH: "64"
  #
  #   - PYTHON: "C:\\Python34"
  #     PYTHON_VERSION: "3.4.x" # currently 3.4.3
  #     PYTHON_ARCH: "32"
  #
  #   - PYTHON: "C:\\Python34-x64"
  #     PYTHON_VERSION: "3.4.x" # currently 3.4.3
  #     PYTHON_ARCH: "64"
  #
  #   # Python versions not pre-installed
  #
  #   # Python 2.6.6 is the latest Python 2.6 with a Windows installer
  #   # See: https://github.com/ogrisel/python-appveyor-demo/issues/10
  #
  #   - PYTHON: "C:\\Python266"
  #     PYTHON_VERSION: "2.6.6"
  #     PYTHON_ARCH: "32"
  #
  #   # Major and minor releases (i.e x.0.0 and x.y.0) prior to 3.3.0 use
  #   # a different naming scheme.
  #
  #   - PYTHON: "C:\\Python270"
  #     PYTHON_VERSION: "2.7.0"
  #     PYTHON_ARCH: "32"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r dev-requirements.txt"

  # clone git submodule
  - "git submodule update --init --recursive"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - "%CMD_IN_ENV% mkdir pdfminer\\pdfminer\\cmap"
  - "%CMD_IN_ENV% python pdfminer\\tools\\conv_cmap.py -c B5=cp950 -c UniCNS-UTF8=utf-8 pdfminer\\pdfminer\\cmap Adobe-CNS1 cmaprsrc\\cid2code_Adobe_CNS1.txt"
  - "%CMD_IN_ENV% python pdfminer\\tools\\conv_cmap.py -c GBK-EUC=cp936 -c UniGB-UTF8=utf-8 pdfminer\\pdfminer\\cmap Adobe-GB1 cmaprsrc\\cid2code_Adobe_GB1.txt"
  - "%CMD_IN_ENV% python pdfminer\\tools\\conv_cmap.py -c RKSJ=cp932 -c EUC=euc-jp -c UniJIS-UTF8=utf-8 pdfminer\\pdfminer\\cmap Adobe-Japan1 cmaprsrc\cid2code_Adobe_Japan1.txt"
  - "%CMD_IN_ENV% python pdfminer\\tools\\conv_cmap.py -c KSC-EUC=euc-kr -c KSC-Johab=johab -c KSCms-UHC=cp949 -c UniKS-UTF8=utf-8 pdfminer\\pdfminer\\cmap Adobe-Korea1 cmaprsrc\\cid2code_Adobe_Korea1.txt"
  - "%CMD_IN_ENV% python pdfminer\\setup.py install"
  - "%CMD_IN_ENV% python setup.py py2exe"

after_test:
  # If tests are successful, create binary packages for the project.
  - ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
